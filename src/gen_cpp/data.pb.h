// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data.proto

#ifndef PROTOBUF_data_2eproto__INCLUDED
#define PROTOBUF_data_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_data_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPQueryStatisticsImpl();
void InitDefaultsPQueryStatistics();
void InitDefaultsPRowBatchImpl();
void InitDefaultsPRowBatch();
void InitDefaultsPColumn_DecimalImpl();
void InitDefaultsPColumn_Decimal();
void InitDefaultsPColumnImpl();
void InitDefaultsPColumn();
void InitDefaultsPBlockImpl();
void InitDefaultsPBlock();
inline void InitDefaults() {
  InitDefaultsPQueryStatistics();
  InitDefaultsPRowBatch();
  InitDefaultsPColumn_Decimal();
  InitDefaultsPColumn();
  InitDefaultsPBlock();
}
}  // namespace protobuf_data_2eproto
namespace doris {
class PBlock;
class PBlockDefaultTypeInternal;
extern PBlockDefaultTypeInternal _PBlock_default_instance_;
class PColumn;
class PColumnDefaultTypeInternal;
extern PColumnDefaultTypeInternal _PColumn_default_instance_;
class PColumn_Decimal;
class PColumn_DecimalDefaultTypeInternal;
extern PColumn_DecimalDefaultTypeInternal _PColumn_Decimal_default_instance_;
class PQueryStatistics;
class PQueryStatisticsDefaultTypeInternal;
extern PQueryStatisticsDefaultTypeInternal _PQueryStatistics_default_instance_;
class PRowBatch;
class PRowBatchDefaultTypeInternal;
extern PRowBatchDefaultTypeInternal _PRowBatch_default_instance_;
}  // namespace doris
namespace doris {

enum PColumn_DataType {
  PColumn_DataType_UINT8 = 0,
  PColumn_DataType_UINT16 = 1,
  PColumn_DataType_UINT32 = 2,
  PColumn_DataType_UINT64 = 3,
  PColumn_DataType_UINT128 = 4,
  PColumn_DataType_UINT256 = 5,
  PColumn_DataType_INT16 = 6,
  PColumn_DataType_INT8 = 7,
  PColumn_DataType_INT32 = 8,
  PColumn_DataType_INT64 = 9,
  PColumn_DataType_INT128 = 10,
  PColumn_DataType_INT256 = 11,
  PColumn_DataType_FLOAT32 = 12,
  PColumn_DataType_FLOAT64 = 13,
  PColumn_DataType_BOOLEAN = 14,
  PColumn_DataType_DATE = 15,
  PColumn_DataType_DATETIME = 16,
  PColumn_DataType_HLL = 17,
  PColumn_DataType_BITMAP = 18,
  PColumn_DataType_ARRAY = 19,
  PColumn_DataType_MAP = 20,
  PColumn_DataType_STRUCT = 21,
  PColumn_DataType_STRING = 22,
  PColumn_DataType_DECIMAL32 = 23,
  PColumn_DataType_DECIMAL64 = 24,
  PColumn_DataType_DECIMAL128 = 25,
  PColumn_DataType_BYTES = 26,
  PColumn_DataType_NOTHING = 27,
  PColumn_DataType_UNKNOWN = 999
};
bool PColumn_DataType_IsValid(int value);
const PColumn_DataType PColumn_DataType_DataType_MIN = PColumn_DataType_UINT8;
const PColumn_DataType PColumn_DataType_DataType_MAX = PColumn_DataType_UNKNOWN;
const int PColumn_DataType_DataType_ARRAYSIZE = PColumn_DataType_DataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PColumn_DataType_descriptor();
inline const ::std::string& PColumn_DataType_Name(PColumn_DataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PColumn_DataType_descriptor(), value);
}
inline bool PColumn_DataType_Parse(
    const ::std::string& name, PColumn_DataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PColumn_DataType>(
    PColumn_DataType_descriptor(), name, value);
}
// ===================================================================

class PQueryStatistics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:doris.PQueryStatistics) */ {
 public:
  PQueryStatistics();
  virtual ~PQueryStatistics();

  PQueryStatistics(const PQueryStatistics& from);

  inline PQueryStatistics& operator=(const PQueryStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PQueryStatistics(PQueryStatistics&& from) noexcept
    : PQueryStatistics() {
    *this = ::std::move(from);
  }

  inline PQueryStatistics& operator=(PQueryStatistics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PQueryStatistics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PQueryStatistics* internal_default_instance() {
    return reinterpret_cast<const PQueryStatistics*>(
               &_PQueryStatistics_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PQueryStatistics* other);
  friend void swap(PQueryStatistics& a, PQueryStatistics& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PQueryStatistics* New() const PROTOBUF_FINAL { return New(NULL); }

  PQueryStatistics* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PQueryStatistics& from);
  void MergeFrom(const PQueryStatistics& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PQueryStatistics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 scan_rows = 1;
  bool has_scan_rows() const;
  void clear_scan_rows();
  static const int kScanRowsFieldNumber = 1;
  ::google::protobuf::int64 scan_rows() const;
  void set_scan_rows(::google::protobuf::int64 value);

  // optional int64 scan_bytes = 2;
  bool has_scan_bytes() const;
  void clear_scan_bytes();
  static const int kScanBytesFieldNumber = 2;
  ::google::protobuf::int64 scan_bytes() const;
  void set_scan_bytes(::google::protobuf::int64 value);

  // optional int64 returned_rows = 3;
  bool has_returned_rows() const;
  void clear_returned_rows();
  static const int kReturnedRowsFieldNumber = 3;
  ::google::protobuf::int64 returned_rows() const;
  void set_returned_rows(::google::protobuf::int64 value);

  // optional int64 cpu_ms = 4;
  bool has_cpu_ms() const;
  void clear_cpu_ms();
  static const int kCpuMsFieldNumber = 4;
  ::google::protobuf::int64 cpu_ms() const;
  void set_cpu_ms(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:doris.PQueryStatistics)
 private:
  void set_has_scan_rows();
  void clear_has_scan_rows();
  void set_has_scan_bytes();
  void clear_has_scan_bytes();
  void set_has_returned_rows();
  void clear_has_returned_rows();
  void set_has_cpu_ms();
  void clear_has_cpu_ms();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 scan_rows_;
  ::google::protobuf::int64 scan_bytes_;
  ::google::protobuf::int64 returned_rows_;
  ::google::protobuf::int64 cpu_ms_;
  friend struct ::protobuf_data_2eproto::TableStruct;
  friend void ::protobuf_data_2eproto::InitDefaultsPQueryStatisticsImpl();
};
// -------------------------------------------------------------------

class PRowBatch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:doris.PRowBatch) */ {
 public:
  PRowBatch();
  virtual ~PRowBatch();

  PRowBatch(const PRowBatch& from);

  inline PRowBatch& operator=(const PRowBatch& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PRowBatch(PRowBatch&& from) noexcept
    : PRowBatch() {
    *this = ::std::move(from);
  }

  inline PRowBatch& operator=(PRowBatch&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PRowBatch& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PRowBatch* internal_default_instance() {
    return reinterpret_cast<const PRowBatch*>(
               &_PRowBatch_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(PRowBatch* other);
  friend void swap(PRowBatch& a, PRowBatch& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PRowBatch* New() const PROTOBUF_FINAL { return New(NULL); }

  PRowBatch* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PRowBatch& from);
  void MergeFrom(const PRowBatch& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PRowBatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 row_tuples = 2;
  int row_tuples_size() const;
  void clear_row_tuples();
  static const int kRowTuplesFieldNumber = 2;
  ::google::protobuf::int32 row_tuples(int index) const;
  void set_row_tuples(int index, ::google::protobuf::int32 value);
  void add_row_tuples(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      row_tuples() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_row_tuples();

  // repeated int32 tuple_offsets = 3;
  int tuple_offsets_size() const;
  void clear_tuple_offsets();
  static const int kTupleOffsetsFieldNumber = 3;
  ::google::protobuf::int32 tuple_offsets(int index) const;
  void set_tuple_offsets(int index, ::google::protobuf::int32 value);
  void add_tuple_offsets(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      tuple_offsets() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_tuple_offsets();

  // required bytes tuple_data = 4;
  bool has_tuple_data() const;
  void clear_tuple_data();
  static const int kTupleDataFieldNumber = 4;
  const ::std::string& tuple_data() const;
  void set_tuple_data(const ::std::string& value);
  #if LANG_CXX11
  void set_tuple_data(::std::string&& value);
  #endif
  void set_tuple_data(const char* value);
  void set_tuple_data(const void* value, size_t size);
  ::std::string* mutable_tuple_data();
  ::std::string* release_tuple_data();
  void set_allocated_tuple_data(::std::string* tuple_data);

  // required int32 num_rows = 1;
  bool has_num_rows() const;
  void clear_num_rows();
  static const int kNumRowsFieldNumber = 1;
  ::google::protobuf::int32 num_rows() const;
  void set_num_rows(::google::protobuf::int32 value);

  // required bool is_compressed = 5;
  bool has_is_compressed() const;
  void clear_is_compressed();
  static const int kIsCompressedFieldNumber = 5;
  bool is_compressed() const;
  void set_is_compressed(bool value);

  // @@protoc_insertion_point(class_scope:doris.PRowBatch)
 private:
  void set_has_num_rows();
  void clear_has_num_rows();
  void set_has_tuple_data();
  void clear_has_tuple_data();
  void set_has_is_compressed();
  void clear_has_is_compressed();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > row_tuples_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > tuple_offsets_;
  ::google::protobuf::internal::ArenaStringPtr tuple_data_;
  ::google::protobuf::int32 num_rows_;
  bool is_compressed_;
  friend struct ::protobuf_data_2eproto::TableStruct;
  friend void ::protobuf_data_2eproto::InitDefaultsPRowBatchImpl();
};
// -------------------------------------------------------------------

class PColumn_Decimal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:doris.PColumn.Decimal) */ {
 public:
  PColumn_Decimal();
  virtual ~PColumn_Decimal();

  PColumn_Decimal(const PColumn_Decimal& from);

  inline PColumn_Decimal& operator=(const PColumn_Decimal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PColumn_Decimal(PColumn_Decimal&& from) noexcept
    : PColumn_Decimal() {
    *this = ::std::move(from);
  }

  inline PColumn_Decimal& operator=(PColumn_Decimal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PColumn_Decimal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PColumn_Decimal* internal_default_instance() {
    return reinterpret_cast<const PColumn_Decimal*>(
               &_PColumn_Decimal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(PColumn_Decimal* other);
  friend void swap(PColumn_Decimal& a, PColumn_Decimal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PColumn_Decimal* New() const PROTOBUF_FINAL { return New(NULL); }

  PColumn_Decimal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PColumn_Decimal& from);
  void MergeFrom(const PColumn_Decimal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PColumn_Decimal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 precision = 1;
  bool has_precision() const;
  void clear_precision();
  static const int kPrecisionFieldNumber = 1;
  ::google::protobuf::uint32 precision() const;
  void set_precision(::google::protobuf::uint32 value);

  // optional uint32 scale = 2;
  bool has_scale() const;
  void clear_scale();
  static const int kScaleFieldNumber = 2;
  ::google::protobuf::uint32 scale() const;
  void set_scale(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:doris.PColumn.Decimal)
 private:
  void set_has_precision();
  void clear_has_precision();
  void set_has_scale();
  void clear_has_scale();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 precision_;
  ::google::protobuf::uint32 scale_;
  friend struct ::protobuf_data_2eproto::TableStruct;
  friend void ::protobuf_data_2eproto::InitDefaultsPColumn_DecimalImpl();
};
// -------------------------------------------------------------------

class PColumn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:doris.PColumn) */ {
 public:
  PColumn();
  virtual ~PColumn();

  PColumn(const PColumn& from);

  inline PColumn& operator=(const PColumn& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PColumn(PColumn&& from) noexcept
    : PColumn() {
    *this = ::std::move(from);
  }

  inline PColumn& operator=(PColumn&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PColumn& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PColumn* internal_default_instance() {
    return reinterpret_cast<const PColumn*>(
               &_PColumn_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(PColumn* other);
  friend void swap(PColumn& a, PColumn& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PColumn* New() const PROTOBUF_FINAL { return New(NULL); }

  PColumn* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PColumn& from);
  void MergeFrom(const PColumn& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PColumn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PColumn_Decimal Decimal;

  typedef PColumn_DataType DataType;
  static const DataType UINT8 =
    PColumn_DataType_UINT8;
  static const DataType UINT16 =
    PColumn_DataType_UINT16;
  static const DataType UINT32 =
    PColumn_DataType_UINT32;
  static const DataType UINT64 =
    PColumn_DataType_UINT64;
  static const DataType UINT128 =
    PColumn_DataType_UINT128;
  static const DataType UINT256 =
    PColumn_DataType_UINT256;
  static const DataType INT16 =
    PColumn_DataType_INT16;
  static const DataType INT8 =
    PColumn_DataType_INT8;
  static const DataType INT32 =
    PColumn_DataType_INT32;
  static const DataType INT64 =
    PColumn_DataType_INT64;
  static const DataType INT128 =
    PColumn_DataType_INT128;
  static const DataType INT256 =
    PColumn_DataType_INT256;
  static const DataType FLOAT32 =
    PColumn_DataType_FLOAT32;
  static const DataType FLOAT64 =
    PColumn_DataType_FLOAT64;
  static const DataType BOOLEAN =
    PColumn_DataType_BOOLEAN;
  static const DataType DATE =
    PColumn_DataType_DATE;
  static const DataType DATETIME =
    PColumn_DataType_DATETIME;
  static const DataType HLL =
    PColumn_DataType_HLL;
  static const DataType BITMAP =
    PColumn_DataType_BITMAP;
  static const DataType ARRAY =
    PColumn_DataType_ARRAY;
  static const DataType MAP =
    PColumn_DataType_MAP;
  static const DataType STRUCT =
    PColumn_DataType_STRUCT;
  static const DataType STRING =
    PColumn_DataType_STRING;
  static const DataType DECIMAL32 =
    PColumn_DataType_DECIMAL32;
  static const DataType DECIMAL64 =
    PColumn_DataType_DECIMAL64;
  static const DataType DECIMAL128 =
    PColumn_DataType_DECIMAL128;
  static const DataType BYTES =
    PColumn_DataType_BYTES;
  static const DataType NOTHING =
    PColumn_DataType_NOTHING;
  static const DataType UNKNOWN =
    PColumn_DataType_UNKNOWN;
  static inline bool DataType_IsValid(int value) {
    return PColumn_DataType_IsValid(value);
  }
  static const DataType DataType_MIN =
    PColumn_DataType_DataType_MIN;
  static const DataType DataType_MAX =
    PColumn_DataType_DataType_MAX;
  static const int DataType_ARRAYSIZE =
    PColumn_DataType_DataType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DataType_descriptor() {
    return PColumn_DataType_descriptor();
  }
  static inline const ::std::string& DataType_Name(DataType value) {
    return PColumn_DataType_Name(value);
  }
  static inline bool DataType_Parse(const ::std::string& name,
      DataType* value) {
    return PColumn_DataType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated bool is_null = 3;
  int is_null_size() const;
  void clear_is_null();
  static const int kIsNullFieldNumber = 3;
  bool is_null(int index) const;
  void set_is_null(int index, bool value);
  void add_is_null(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      is_null() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_is_null();

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bytes binary = 4;
  bool has_binary() const;
  void clear_binary();
  static const int kBinaryFieldNumber = 4;
  const ::std::string& binary() const;
  void set_binary(const ::std::string& value);
  #if LANG_CXX11
  void set_binary(::std::string&& value);
  #endif
  void set_binary(const char* value);
  void set_binary(const void* value, size_t size);
  ::std::string* mutable_binary();
  ::std::string* release_binary();
  void set_allocated_binary(::std::string* binary);

  // optional .doris.PColumn.Decimal decimal_param = 6;
  bool has_decimal_param() const;
  void clear_decimal_param();
  static const int kDecimalParamFieldNumber = 6;
  const ::doris::PColumn_Decimal& decimal_param() const;
  ::doris::PColumn_Decimal* release_decimal_param();
  ::doris::PColumn_Decimal* mutable_decimal_param();
  void set_allocated_decimal_param(::doris::PColumn_Decimal* decimal_param);

  // required .doris.PColumn.DataType type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::doris::PColumn_DataType type() const;
  void set_type(::doris::PColumn_DataType value);

  // optional bool compressed = 5 [default = false];
  bool has_compressed() const;
  void clear_compressed();
  static const int kCompressedFieldNumber = 5;
  bool compressed() const;
  void set_compressed(bool value);

  // @@protoc_insertion_point(class_scope:doris.PColumn)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_type();
  void clear_has_type();
  void set_has_binary();
  void clear_has_binary();
  void set_has_compressed();
  void clear_has_compressed();
  void set_has_decimal_param();
  void clear_has_decimal_param();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< bool > is_null_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr binary_;
  ::doris::PColumn_Decimal* decimal_param_;
  int type_;
  bool compressed_;
  friend struct ::protobuf_data_2eproto::TableStruct;
  friend void ::protobuf_data_2eproto::InitDefaultsPColumnImpl();
};
// -------------------------------------------------------------------

class PBlock : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:doris.PBlock) */ {
 public:
  PBlock();
  virtual ~PBlock();

  PBlock(const PBlock& from);

  inline PBlock& operator=(const PBlock& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBlock(PBlock&& from) noexcept
    : PBlock() {
    *this = ::std::move(from);
  }

  inline PBlock& operator=(PBlock&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBlock& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBlock* internal_default_instance() {
    return reinterpret_cast<const PBlock*>(
               &_PBlock_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(PBlock* other);
  friend void swap(PBlock& a, PBlock& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBlock* New() const PROTOBUF_FINAL { return New(NULL); }

  PBlock* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBlock& from);
  void MergeFrom(const PBlock& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBlock* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .doris.PColumn columns = 3;
  int columns_size() const;
  void clear_columns();
  static const int kColumnsFieldNumber = 3;
  const ::doris::PColumn& columns(int index) const;
  ::doris::PColumn* mutable_columns(int index);
  ::doris::PColumn* add_columns();
  ::google::protobuf::RepeatedPtrField< ::doris::PColumn >*
      mutable_columns();
  const ::google::protobuf::RepeatedPtrField< ::doris::PColumn >&
      columns() const;

  // optional uint64 num_rows = 1;
  bool has_num_rows() const;
  void clear_num_rows();
  static const int kNumRowsFieldNumber = 1;
  ::google::protobuf::uint64 num_rows() const;
  void set_num_rows(::google::protobuf::uint64 value);

  // optional uint32 num_columns = 2;
  bool has_num_columns() const;
  void clear_num_columns();
  static const int kNumColumnsFieldNumber = 2;
  ::google::protobuf::uint32 num_columns() const;
  void set_num_columns(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:doris.PBlock)
 private:
  void set_has_num_rows();
  void clear_has_num_rows();
  void set_has_num_columns();
  void clear_has_num_columns();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::doris::PColumn > columns_;
  ::google::protobuf::uint64 num_rows_;
  ::google::protobuf::uint32 num_columns_;
  friend struct ::protobuf_data_2eproto::TableStruct;
  friend void ::protobuf_data_2eproto::InitDefaultsPBlockImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PQueryStatistics

// optional int64 scan_rows = 1;
inline bool PQueryStatistics::has_scan_rows() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PQueryStatistics::set_has_scan_rows() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PQueryStatistics::clear_has_scan_rows() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PQueryStatistics::clear_scan_rows() {
  scan_rows_ = GOOGLE_LONGLONG(0);
  clear_has_scan_rows();
}
inline ::google::protobuf::int64 PQueryStatistics::scan_rows() const {
  // @@protoc_insertion_point(field_get:doris.PQueryStatistics.scan_rows)
  return scan_rows_;
}
inline void PQueryStatistics::set_scan_rows(::google::protobuf::int64 value) {
  set_has_scan_rows();
  scan_rows_ = value;
  // @@protoc_insertion_point(field_set:doris.PQueryStatistics.scan_rows)
}

// optional int64 scan_bytes = 2;
inline bool PQueryStatistics::has_scan_bytes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PQueryStatistics::set_has_scan_bytes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PQueryStatistics::clear_has_scan_bytes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PQueryStatistics::clear_scan_bytes() {
  scan_bytes_ = GOOGLE_LONGLONG(0);
  clear_has_scan_bytes();
}
inline ::google::protobuf::int64 PQueryStatistics::scan_bytes() const {
  // @@protoc_insertion_point(field_get:doris.PQueryStatistics.scan_bytes)
  return scan_bytes_;
}
inline void PQueryStatistics::set_scan_bytes(::google::protobuf::int64 value) {
  set_has_scan_bytes();
  scan_bytes_ = value;
  // @@protoc_insertion_point(field_set:doris.PQueryStatistics.scan_bytes)
}

// optional int64 returned_rows = 3;
inline bool PQueryStatistics::has_returned_rows() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PQueryStatistics::set_has_returned_rows() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PQueryStatistics::clear_has_returned_rows() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PQueryStatistics::clear_returned_rows() {
  returned_rows_ = GOOGLE_LONGLONG(0);
  clear_has_returned_rows();
}
inline ::google::protobuf::int64 PQueryStatistics::returned_rows() const {
  // @@protoc_insertion_point(field_get:doris.PQueryStatistics.returned_rows)
  return returned_rows_;
}
inline void PQueryStatistics::set_returned_rows(::google::protobuf::int64 value) {
  set_has_returned_rows();
  returned_rows_ = value;
  // @@protoc_insertion_point(field_set:doris.PQueryStatistics.returned_rows)
}

// optional int64 cpu_ms = 4;
inline bool PQueryStatistics::has_cpu_ms() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PQueryStatistics::set_has_cpu_ms() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PQueryStatistics::clear_has_cpu_ms() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PQueryStatistics::clear_cpu_ms() {
  cpu_ms_ = GOOGLE_LONGLONG(0);
  clear_has_cpu_ms();
}
inline ::google::protobuf::int64 PQueryStatistics::cpu_ms() const {
  // @@protoc_insertion_point(field_get:doris.PQueryStatistics.cpu_ms)
  return cpu_ms_;
}
inline void PQueryStatistics::set_cpu_ms(::google::protobuf::int64 value) {
  set_has_cpu_ms();
  cpu_ms_ = value;
  // @@protoc_insertion_point(field_set:doris.PQueryStatistics.cpu_ms)
}

// -------------------------------------------------------------------

// PRowBatch

// required int32 num_rows = 1;
inline bool PRowBatch::has_num_rows() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PRowBatch::set_has_num_rows() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PRowBatch::clear_has_num_rows() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PRowBatch::clear_num_rows() {
  num_rows_ = 0;
  clear_has_num_rows();
}
inline ::google::protobuf::int32 PRowBatch::num_rows() const {
  // @@protoc_insertion_point(field_get:doris.PRowBatch.num_rows)
  return num_rows_;
}
inline void PRowBatch::set_num_rows(::google::protobuf::int32 value) {
  set_has_num_rows();
  num_rows_ = value;
  // @@protoc_insertion_point(field_set:doris.PRowBatch.num_rows)
}

// repeated int32 row_tuples = 2;
inline int PRowBatch::row_tuples_size() const {
  return row_tuples_.size();
}
inline void PRowBatch::clear_row_tuples() {
  row_tuples_.Clear();
}
inline ::google::protobuf::int32 PRowBatch::row_tuples(int index) const {
  // @@protoc_insertion_point(field_get:doris.PRowBatch.row_tuples)
  return row_tuples_.Get(index);
}
inline void PRowBatch::set_row_tuples(int index, ::google::protobuf::int32 value) {
  row_tuples_.Set(index, value);
  // @@protoc_insertion_point(field_set:doris.PRowBatch.row_tuples)
}
inline void PRowBatch::add_row_tuples(::google::protobuf::int32 value) {
  row_tuples_.Add(value);
  // @@protoc_insertion_point(field_add:doris.PRowBatch.row_tuples)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PRowBatch::row_tuples() const {
  // @@protoc_insertion_point(field_list:doris.PRowBatch.row_tuples)
  return row_tuples_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PRowBatch::mutable_row_tuples() {
  // @@protoc_insertion_point(field_mutable_list:doris.PRowBatch.row_tuples)
  return &row_tuples_;
}

// repeated int32 tuple_offsets = 3;
inline int PRowBatch::tuple_offsets_size() const {
  return tuple_offsets_.size();
}
inline void PRowBatch::clear_tuple_offsets() {
  tuple_offsets_.Clear();
}
inline ::google::protobuf::int32 PRowBatch::tuple_offsets(int index) const {
  // @@protoc_insertion_point(field_get:doris.PRowBatch.tuple_offsets)
  return tuple_offsets_.Get(index);
}
inline void PRowBatch::set_tuple_offsets(int index, ::google::protobuf::int32 value) {
  tuple_offsets_.Set(index, value);
  // @@protoc_insertion_point(field_set:doris.PRowBatch.tuple_offsets)
}
inline void PRowBatch::add_tuple_offsets(::google::protobuf::int32 value) {
  tuple_offsets_.Add(value);
  // @@protoc_insertion_point(field_add:doris.PRowBatch.tuple_offsets)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PRowBatch::tuple_offsets() const {
  // @@protoc_insertion_point(field_list:doris.PRowBatch.tuple_offsets)
  return tuple_offsets_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PRowBatch::mutable_tuple_offsets() {
  // @@protoc_insertion_point(field_mutable_list:doris.PRowBatch.tuple_offsets)
  return &tuple_offsets_;
}

// required bytes tuple_data = 4;
inline bool PRowBatch::has_tuple_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PRowBatch::set_has_tuple_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PRowBatch::clear_has_tuple_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PRowBatch::clear_tuple_data() {
  tuple_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tuple_data();
}
inline const ::std::string& PRowBatch::tuple_data() const {
  // @@protoc_insertion_point(field_get:doris.PRowBatch.tuple_data)
  return tuple_data_.GetNoArena();
}
inline void PRowBatch::set_tuple_data(const ::std::string& value) {
  set_has_tuple_data();
  tuple_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:doris.PRowBatch.tuple_data)
}
#if LANG_CXX11
inline void PRowBatch::set_tuple_data(::std::string&& value) {
  set_has_tuple_data();
  tuple_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:doris.PRowBatch.tuple_data)
}
#endif
inline void PRowBatch::set_tuple_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tuple_data();
  tuple_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:doris.PRowBatch.tuple_data)
}
inline void PRowBatch::set_tuple_data(const void* value, size_t size) {
  set_has_tuple_data();
  tuple_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:doris.PRowBatch.tuple_data)
}
inline ::std::string* PRowBatch::mutable_tuple_data() {
  set_has_tuple_data();
  // @@protoc_insertion_point(field_mutable:doris.PRowBatch.tuple_data)
  return tuple_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PRowBatch::release_tuple_data() {
  // @@protoc_insertion_point(field_release:doris.PRowBatch.tuple_data)
  clear_has_tuple_data();
  return tuple_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PRowBatch::set_allocated_tuple_data(::std::string* tuple_data) {
  if (tuple_data != NULL) {
    set_has_tuple_data();
  } else {
    clear_has_tuple_data();
  }
  tuple_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tuple_data);
  // @@protoc_insertion_point(field_set_allocated:doris.PRowBatch.tuple_data)
}

// required bool is_compressed = 5;
inline bool PRowBatch::has_is_compressed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PRowBatch::set_has_is_compressed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PRowBatch::clear_has_is_compressed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PRowBatch::clear_is_compressed() {
  is_compressed_ = false;
  clear_has_is_compressed();
}
inline bool PRowBatch::is_compressed() const {
  // @@protoc_insertion_point(field_get:doris.PRowBatch.is_compressed)
  return is_compressed_;
}
inline void PRowBatch::set_is_compressed(bool value) {
  set_has_is_compressed();
  is_compressed_ = value;
  // @@protoc_insertion_point(field_set:doris.PRowBatch.is_compressed)
}

// -------------------------------------------------------------------

// PColumn_Decimal

// optional uint32 precision = 1;
inline bool PColumn_Decimal::has_precision() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PColumn_Decimal::set_has_precision() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PColumn_Decimal::clear_has_precision() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PColumn_Decimal::clear_precision() {
  precision_ = 0u;
  clear_has_precision();
}
inline ::google::protobuf::uint32 PColumn_Decimal::precision() const {
  // @@protoc_insertion_point(field_get:doris.PColumn.Decimal.precision)
  return precision_;
}
inline void PColumn_Decimal::set_precision(::google::protobuf::uint32 value) {
  set_has_precision();
  precision_ = value;
  // @@protoc_insertion_point(field_set:doris.PColumn.Decimal.precision)
}

// optional uint32 scale = 2;
inline bool PColumn_Decimal::has_scale() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PColumn_Decimal::set_has_scale() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PColumn_Decimal::clear_has_scale() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PColumn_Decimal::clear_scale() {
  scale_ = 0u;
  clear_has_scale();
}
inline ::google::protobuf::uint32 PColumn_Decimal::scale() const {
  // @@protoc_insertion_point(field_get:doris.PColumn.Decimal.scale)
  return scale_;
}
inline void PColumn_Decimal::set_scale(::google::protobuf::uint32 value) {
  set_has_scale();
  scale_ = value;
  // @@protoc_insertion_point(field_set:doris.PColumn.Decimal.scale)
}

// -------------------------------------------------------------------

// PColumn

// required string name = 1;
inline bool PColumn::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PColumn::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PColumn::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PColumn::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& PColumn::name() const {
  // @@protoc_insertion_point(field_get:doris.PColumn.name)
  return name_.GetNoArena();
}
inline void PColumn::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:doris.PColumn.name)
}
#if LANG_CXX11
inline void PColumn::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:doris.PColumn.name)
}
#endif
inline void PColumn::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:doris.PColumn.name)
}
inline void PColumn::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:doris.PColumn.name)
}
inline ::std::string* PColumn::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:doris.PColumn.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PColumn::release_name() {
  // @@protoc_insertion_point(field_release:doris.PColumn.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PColumn::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:doris.PColumn.name)
}

// required .doris.PColumn.DataType type = 2;
inline bool PColumn::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PColumn::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PColumn::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PColumn::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::doris::PColumn_DataType PColumn::type() const {
  // @@protoc_insertion_point(field_get:doris.PColumn.type)
  return static_cast< ::doris::PColumn_DataType >(type_);
}
inline void PColumn::set_type(::doris::PColumn_DataType value) {
  assert(::doris::PColumn_DataType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:doris.PColumn.type)
}

// repeated bool is_null = 3;
inline int PColumn::is_null_size() const {
  return is_null_.size();
}
inline void PColumn::clear_is_null() {
  is_null_.Clear();
}
inline bool PColumn::is_null(int index) const {
  // @@protoc_insertion_point(field_get:doris.PColumn.is_null)
  return is_null_.Get(index);
}
inline void PColumn::set_is_null(int index, bool value) {
  is_null_.Set(index, value);
  // @@protoc_insertion_point(field_set:doris.PColumn.is_null)
}
inline void PColumn::add_is_null(bool value) {
  is_null_.Add(value);
  // @@protoc_insertion_point(field_add:doris.PColumn.is_null)
}
inline const ::google::protobuf::RepeatedField< bool >&
PColumn::is_null() const {
  // @@protoc_insertion_point(field_list:doris.PColumn.is_null)
  return is_null_;
}
inline ::google::protobuf::RepeatedField< bool >*
PColumn::mutable_is_null() {
  // @@protoc_insertion_point(field_mutable_list:doris.PColumn.is_null)
  return &is_null_;
}

// optional bytes binary = 4;
inline bool PColumn::has_binary() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PColumn::set_has_binary() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PColumn::clear_has_binary() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PColumn::clear_binary() {
  binary_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_binary();
}
inline const ::std::string& PColumn::binary() const {
  // @@protoc_insertion_point(field_get:doris.PColumn.binary)
  return binary_.GetNoArena();
}
inline void PColumn::set_binary(const ::std::string& value) {
  set_has_binary();
  binary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:doris.PColumn.binary)
}
#if LANG_CXX11
inline void PColumn::set_binary(::std::string&& value) {
  set_has_binary();
  binary_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:doris.PColumn.binary)
}
#endif
inline void PColumn::set_binary(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_binary();
  binary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:doris.PColumn.binary)
}
inline void PColumn::set_binary(const void* value, size_t size) {
  set_has_binary();
  binary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:doris.PColumn.binary)
}
inline ::std::string* PColumn::mutable_binary() {
  set_has_binary();
  // @@protoc_insertion_point(field_mutable:doris.PColumn.binary)
  return binary_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PColumn::release_binary() {
  // @@protoc_insertion_point(field_release:doris.PColumn.binary)
  clear_has_binary();
  return binary_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PColumn::set_allocated_binary(::std::string* binary) {
  if (binary != NULL) {
    set_has_binary();
  } else {
    clear_has_binary();
  }
  binary_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), binary);
  // @@protoc_insertion_point(field_set_allocated:doris.PColumn.binary)
}

// optional bool compressed = 5 [default = false];
inline bool PColumn::has_compressed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PColumn::set_has_compressed() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PColumn::clear_has_compressed() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PColumn::clear_compressed() {
  compressed_ = false;
  clear_has_compressed();
}
inline bool PColumn::compressed() const {
  // @@protoc_insertion_point(field_get:doris.PColumn.compressed)
  return compressed_;
}
inline void PColumn::set_compressed(bool value) {
  set_has_compressed();
  compressed_ = value;
  // @@protoc_insertion_point(field_set:doris.PColumn.compressed)
}

// optional .doris.PColumn.Decimal decimal_param = 6;
inline bool PColumn::has_decimal_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PColumn::set_has_decimal_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PColumn::clear_has_decimal_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PColumn::clear_decimal_param() {
  if (decimal_param_ != NULL) decimal_param_->Clear();
  clear_has_decimal_param();
}
inline const ::doris::PColumn_Decimal& PColumn::decimal_param() const {
  const ::doris::PColumn_Decimal* p = decimal_param_;
  // @@protoc_insertion_point(field_get:doris.PColumn.decimal_param)
  return p != NULL ? *p : *reinterpret_cast<const ::doris::PColumn_Decimal*>(
      &::doris::_PColumn_Decimal_default_instance_);
}
inline ::doris::PColumn_Decimal* PColumn::release_decimal_param() {
  // @@protoc_insertion_point(field_release:doris.PColumn.decimal_param)
  clear_has_decimal_param();
  ::doris::PColumn_Decimal* temp = decimal_param_;
  decimal_param_ = NULL;
  return temp;
}
inline ::doris::PColumn_Decimal* PColumn::mutable_decimal_param() {
  set_has_decimal_param();
  if (decimal_param_ == NULL) {
    decimal_param_ = new ::doris::PColumn_Decimal;
  }
  // @@protoc_insertion_point(field_mutable:doris.PColumn.decimal_param)
  return decimal_param_;
}
inline void PColumn::set_allocated_decimal_param(::doris::PColumn_Decimal* decimal_param) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete decimal_param_;
  }
  if (decimal_param) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      decimal_param = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, decimal_param, submessage_arena);
    }
    set_has_decimal_param();
  } else {
    clear_has_decimal_param();
  }
  decimal_param_ = decimal_param;
  // @@protoc_insertion_point(field_set_allocated:doris.PColumn.decimal_param)
}

// -------------------------------------------------------------------

// PBlock

// optional uint64 num_rows = 1;
inline bool PBlock::has_num_rows() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBlock::set_has_num_rows() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBlock::clear_has_num_rows() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBlock::clear_num_rows() {
  num_rows_ = GOOGLE_ULONGLONG(0);
  clear_has_num_rows();
}
inline ::google::protobuf::uint64 PBlock::num_rows() const {
  // @@protoc_insertion_point(field_get:doris.PBlock.num_rows)
  return num_rows_;
}
inline void PBlock::set_num_rows(::google::protobuf::uint64 value) {
  set_has_num_rows();
  num_rows_ = value;
  // @@protoc_insertion_point(field_set:doris.PBlock.num_rows)
}

// optional uint32 num_columns = 2;
inline bool PBlock::has_num_columns() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBlock::set_has_num_columns() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBlock::clear_has_num_columns() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBlock::clear_num_columns() {
  num_columns_ = 0u;
  clear_has_num_columns();
}
inline ::google::protobuf::uint32 PBlock::num_columns() const {
  // @@protoc_insertion_point(field_get:doris.PBlock.num_columns)
  return num_columns_;
}
inline void PBlock::set_num_columns(::google::protobuf::uint32 value) {
  set_has_num_columns();
  num_columns_ = value;
  // @@protoc_insertion_point(field_set:doris.PBlock.num_columns)
}

// repeated .doris.PColumn columns = 3;
inline int PBlock::columns_size() const {
  return columns_.size();
}
inline void PBlock::clear_columns() {
  columns_.Clear();
}
inline const ::doris::PColumn& PBlock::columns(int index) const {
  // @@protoc_insertion_point(field_get:doris.PBlock.columns)
  return columns_.Get(index);
}
inline ::doris::PColumn* PBlock::mutable_columns(int index) {
  // @@protoc_insertion_point(field_mutable:doris.PBlock.columns)
  return columns_.Mutable(index);
}
inline ::doris::PColumn* PBlock::add_columns() {
  // @@protoc_insertion_point(field_add:doris.PBlock.columns)
  return columns_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::doris::PColumn >*
PBlock::mutable_columns() {
  // @@protoc_insertion_point(field_mutable_list:doris.PBlock.columns)
  return &columns_;
}
inline const ::google::protobuf::RepeatedPtrField< ::doris::PColumn >&
PBlock::columns() const {
  // @@protoc_insertion_point(field_list:doris.PBlock.columns)
  return columns_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace doris

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::doris::PColumn_DataType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::doris::PColumn_DataType>() {
  return ::doris::PColumn_DataType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_data_2eproto__INCLUDED
